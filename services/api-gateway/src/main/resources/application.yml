server:
  port: 8080

spring:
  application:
    name: api-gateway

  # Spring Cloud Gateway Configuration
  cloud:
    gateway:
      routes:
        # Data Service Routes
        - id: data-service
          uri: lb://data-service
          predicates:
            - Path=/api/data/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: data-service-cb
                fallbackUri: forward:/fallback/data
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
                redis-rate-limiter.requestedTokens: 1

        # Analysis Service Routes
        - id: analysis-service
          uri: lb://analysis-service
          predicates:
            - Path=/api/analysis/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: analysis-service-cb
                fallbackUri: forward:/fallback/analysis
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100

        # Strategy Service Routes
        - id: strategy-service
          uri: lb://strategy-service
          predicates:
            - Path=/api/strategy/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: strategy-service-cb
                fallbackUri: forward:/fallback/strategy
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60

        # Execution Service Routes
        - id: execution-service
          uri: lb://execution-service
          predicates:
            - Path=/api/execution/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: execution-service-cb
                fallbackUri: forward:/fallback/execution
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 200
                redis-rate-limiter.burstCapacity: 400

        # Portfolio Service Routes
        - id: portfolio-service
          uri: lb://portfolio-service
          predicates:
            - Path=/api/portfolio/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: portfolio-service-cb
                fallbackUri: forward:/fallback/portfolio
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200

        # Risk Service Routes
        - id: risk-service
          uri: lb://risk-service
          predicates:
            - Path=/api/risk/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: risk-service-cb
                fallbackUri: forward:/fallback/risk
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100

        # WebSocket Route
        - id: websocket-route
          uri: ws://localhost:8080
          predicates:
            - Path=/ws/**

      # Global CORS Configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "http://localhost:3001"
              - "https://crypto-trading-dashboard.com"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600

      # Default Filters
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar

  # Service Discovery
  cloud:
    discovery:
      enabled: true

  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/auth/realms/crypto-trading
          jwk-set-uri: http://localhost:8081/auth/realms/crypto-trading/protocol/openid_connect/certs

  # Redis Configuration (for rate limiting)
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      data-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      analysis-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
      strategy-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
      execution-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
      portfolio-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
      risk-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50

# JWT Configuration
jwt:
  secret: mySecretKey123456789012345678901234567890
  expiration: 86400000 # 24 hours
  refresh-expiration: 604800000 # 7 days

# Rate Limiting Configuration
rate-limiting:
  default:
    requests-per-minute: 100
    burst-capacity: 200
  tiers:
    basic:
      requests-per-minute: 60
      burst-capacity: 120
    premium:
      requests-per-minute: 300
      burst-capacity: 600
    enterprise:
      requests-per-minute: 1000
      burst-capacity: 2000

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

# WebSocket Configuration
websocket:
  allowed-origins:
    - http://localhost:3000
    - http://localhost:3001
    - https://crypto-trading-dashboard.com
  max-sessions: 1000
  buffer-size: 8192

# Logging
logging:
  level:
    com.cryptotrading: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.reactive: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
