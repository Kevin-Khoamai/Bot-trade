server:
  port: 8081

spring:
  application:
    name: data-acquisition-service
  
  datasource:
    url: jdbc:postgresql://localhost:5433/crypto_trading
    username: crypto_user
    password: crypto_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  data:
    redis:
      host: localhost
      port: 6380
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
    consumer:
      group-id: data-acquisition-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.cryptotrading.dataacquisition.model"

# Exchange API Configuration
exchange:
  binance:
    base-url: https://api.binance.com
    websocket-url: wss://stream.binance.com:9443/ws
    rate-limit: 1200 # requests per minute
  coinbase:
    base-url: https://api.exchange.coinbase.com
    websocket-url: wss://ws-feed.exchange.coinbase.com
    rate-limit: 10 # requests per second

# Data Collection Configuration
data-collection:
  symbols:
    - BTCUSDT
    - ETHUSDT
    - ADAUSDT
    - DOTUSDT
    - LINKUSDT
  intervals:
    - 1m
    - 5m
    - 15m
    - 1h
    - 4h
    - 1d
  fetch-interval: 300000 # 5 minutes in milliseconds
  cache-ttl: 30 # seconds

# Kafka Topics
kafka:
  topics:
    binance-trades: binance-trades
    coinbase-trades: coinbase-trades
    aggregated-data: aggregated-market-data
    price-updates: price-updates

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      binance-api:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
      coinbase-api:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.cryptotrading: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/data-acquisition.log
